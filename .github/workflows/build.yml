name: Build and Push Backend Services
on:
  push:
    branches: [main]
  pull_request:

env:
  IMAGE_REG: ghcr.io
  REPO: hierynomus/sprouter

permissions:
  packages: write
  statuses: write
  checks: write
  contents: write

jobs:
  build-container:
    name: 'Build & push image'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.IMAGE_REG}}
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_REG }}/${{ env.REPO }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  publish-helm-chart:
    name: 'Publish Helm Chart'
    runs-on: ubuntu-latest
    needs: [build-container]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set environment variables
        id: set-variables
        run: |
          echo "REPOSITORY=ghcr.io/$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"
          echo "VERSION=$(yq -r .version ./charts/sprouter/Chart.yaml)" >> "$GITHUB_OUTPUT"
      - name: Env variable output
        id: test-variables
        run: |
          echo ${{ steps.set-variables.outputs.REPOSITORY }}
          echo ${{ steps.set-variables.outputs.VERSION }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Package and push helm chart
        run: |
          helm package ./charts/sprouter --version ${{ steps.set-variables.outputs.VERSION }}
          helm push ./sprouter-${{ steps.set-variables.outputs.VERSION }}.tgz oci://${{ steps.set-variables.outputs.REPOSITORY }}/charts
